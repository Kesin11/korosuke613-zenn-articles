name: AI Review on PR diff

on:
  workflow_call:
    inputs:
      pr_number:
        required: true
        type: string
      user_id:
        required: true
        type: string
      environment:
        required: true
        type: string

jobs:
  review:
    permissions:
      contents: read
      pull-requests: write
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: blob:none

      - name: Setup branches
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_JSON: ${{ runner.temp }}/pr.json
          HEAD_BRANCH: ai-review-head
        id: setup_branches
        run: |
          gh pr view ${{ inputs.pr_number }} --json baseRefName,headRefName > ${{ env.PR_JSON }}
          cat ${{ env.PR_JSON }}
          BASE_REF_NAME="$(jq -r .baseRefName <${{ env.PR_JSON }})"
          set -x

          # 常に main ブランチの tools を利用するために一時的に tools をコピー
          mkdir -p ${{ runner.temp }}/ai-review
          \cp -r ./tools ./deno.lock ${{ runner.temp }}/ai-review

          # PR のブランチに切り替える
          git fetch --update-head-ok origin "$BASE_REF_NAME:$BASE_REF_NAME"
          gh pr checkout --branch ${{ env.HEAD_BRANCH }} ${{ inputs.pr_number }}
          git branch
          echo "latest_git_sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

          # PR のブランチに tools をコピー
          \cp -f ${{ runner.temp }}/ai-review/deno.lock .
          \cp -rf ${{ runner.temp }}/ai-review/tools .
          ls deno.lock tools

          set +x
          echo "base_ref_name=${BASE_REF_NAME}" >> "$GITHUB_OUTPUT"
          echo "head_ref_name=${{ env.HEAD_BRANCH }}" >> "$GITHUB_OUTPUT"

      - uses: denoland/setup-deno@041b854f97b325bd60e53e9dc2de9cb9f9ac0cba # v1.1.4
        with:
          deno-version: v1.x

      - name: Review PR diff with AI
        env:
          LOG_LEVEL: debug
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          git diff ${{ steps.setup_branches.outputs.base_ref_name }}...${{ steps.setup_branches.outputs.head_ref_name }} --name-only
          deno run \
            --allow-env \
            --allow-run=git \
            --allow-write=./tools/dist \
            --allow-read=./articles \
            --allow-net=api.openai.com \
            ./tools/reviewDiffWithAi.ts \
            ${{ steps.setup_branches.outputs.base_ref_name }} \
            ${{ steps.setup_branches.outputs.head_ref_name }}

      - name: Summarize AI Review log
        if: always()
        run: |
          {
            echo "# AI Review log"
            echo '```log'
            cat ./tools/dist/ai-review.log
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"

      - uses: reviewdog/action-setup@3f401fe1d58fe77e10d665ab713057375e39b887 # v1.3.0

      - name: Comment on PR with ReviewDog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_REPO_OWNER: ${{ github.repository_owner }}
          CI_REPO_NAME: ${{ github.event.repository.name }}
          CI_PULL_REQUEST: ${{ inputs.pr_number }}
          CI_COMMIT: ${{ steps.setup_branches.outputs.latest_git_sha }}
        run: |
          GITHUB_ACTIONS='' reviewdog -f=rdjson -reporter=github-pr-review -name=kiba-ai <./tools/dist/rdjson.json

      - name: Comment finish message on PR
        env:
          COMMENT_FILE: ${{ runner.temp }}/ai-review-finished.md
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          {
            echo "@${{ inputs.user_id }} AI Review finished. Please check the review comments."
            echo "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            echo '```json'
            cat ./tools/dist/ai-usage.json
            echo
            echo '```'
          } >> "$COMMENT_FILE"
          gh pr comment ${{ inputs.pr_number }} --body-file "$COMMENT_FILE"
